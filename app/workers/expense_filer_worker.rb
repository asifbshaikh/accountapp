class ExpenseFilerWorker
  
  include Sidekiq::Worker

  def perform(company_id, expense_id)
    Rails.logger.debug "company id is #{company_id} and expense_id is #{expense_id}"

    #create company object from company_id
    @company = Company.find(company_id)
    #fetch expense object from database
    @expense = @company.expenses.find(expense_id)
  
    begin
      #identify expense month
      Rails.logger.debug "ExpenseFilerWorker::perform:: The month of the expense is #{@expense.expense_date.month}"
      #fetch the GSTr2 of that company and month
      @gst_returns = @company.gst_returns.return_month(@expense.expense_date.month)

      if @gst_returns.present? && @gst_returns.gstr_two.present?
        Rails.logger.debug "ExpenseFilerWorker::perform:: Gstr two is found, classifying and adding expense.."
        #@gstr2_item = GstrTwoItem.new(:company_id => @company.id, :voucher_type => 'Expense',
        #  :voucher_id => @expense.id,:voucher_classification => PURCHASE_CLASSIFICATION[classifier.classify_expense(@expense)],
        #  :voucher_number => @expense.voucher_number,:status => 0)
        @gst_returns.gstr_two.add_expense(@expense)
      end
    rescue Exception => e
      Sidekiq.logger.error e.message
      ErrorMailer.experror(e, @company.users.first, "ExpenseFilerWorker for invoice #{@expense.id} and #{@expense.voucher_number}").deliver
    end
  end

end 










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































